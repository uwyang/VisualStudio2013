@model IEnumerable<MvcMovieTut.Models.Movie>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @*creates form and posts them*@
    @Html.ActionLink("Create New", "Create")
    @*overloading the form method so that when POSTing, the url bar shows GET information. *@
    @using (Html.BeginForm("Index", "Movies", FormMethod.Get))
    {
        <p>Title: @Html.TextBox("searchstring") <br />
           @*moviegenre is gotten from the Viewbag. *@
           @*all is the default choice.  *@
           Genre: @Html.DropDownList("moviegenre", "all") <br/>
        <input type="submit" value="Filter" />
        </p>   
    }

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rating)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @*string Function(Model model) { return item.FirstName; }*@
            @*so the argument model is not used. *@
            @* expression is parsed so that MVC engine knows what html to emit for this particular line.*@ 
            @*If your data item does not come from your model object directly, *@
            @*the left part of the lambda expression does not matter. *@
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReleaseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Rating)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
